/*
19) Гоночная трасса состоит из двух основных дорог и нескольких переездов, позволяющих перейти с одной дороги на другую.
На всех участках, включая переезды, движение разрешено только в одну сторону, поэтому переезд возможен только с дороги A на дорогу B.
Гонщик стартует в точке A0 и должен финишировать в точке BN. Он знает, за какое время сможет пройти каждый участок пути по каждой дороге,
то есть время прохождения участков A0A1, A1A2, …, AN-1AN, B0B1, B1B2, …, BN-1BN. Время прохождения всех переездов A0B0, A1B1, …, ANBN одинаково и известно гонщику.
Необходимо определить, за какое минимальное время гонщик сможет пройти трассу.
Входные данные
В первой строке задаётся количество участков трассы N. Во второй строке задаётся целое число t — время (в секундах) прохождения каждого из переездов A0B0, A1B1, …, ANBN.
В каждой из последующих N строк записано два целых числа ai и bi, задающих время (в секундах) прохождения очередного участка на каждой из
дорог. В первой из этих строк указывается время прохождения участков A0A1 и B0B1, во второй — A1A2 и B1B2 и т. д.
Выходные данные
Программа должна напечатать одно целое число: минимально возможное время прохождения трассы (в секундах).
*/

#include <iostream>
using namespace std;

int main()
{
	int i, N, pereezd,time1,time2, vTime;
	int lenA, lenB, tA, tB;

	setlocale(LC_ALL, "Rus"); // русифицируем вывод

	cout << "Введите количество участков трассы: ";	cin >> N;
	cout << "Введите время прохождения переезда: ";	cin >> pereezd;

	int *traceA = new int[N+1]; // время прохождения трассы A нарастающим от начала
	int *traceB = new int[N+1]; // время прохождения трассы B нарастающим от начала

	traceA[0] = 0;
	traceB[0] = 0;
	lenA = 0;
	lenB = 0;

	for (i = 0; i < N; i++) {
		cout << "Введите время прохождения трассы А и В на участке " << i+1 << ": ";	cin >> tA >> tB;
		lenA = lenA + tA;
		lenB = lenB + tB;
		traceA[i + 1] = lenA;
		traceB[i + 1] = lenB;
	}

	time1 = lenA; // время прохождения по трассе А без перехода на В
	time2 = 0; // время прохождения с обязательным переходом с трассы А на В
	time2 = pereezd + lenB; // начальное значение для прохождения с переходом - сразу переходим с трассы А на В в точке 0
	for (i = 1; i <= N; i++) { // цикл по участкам трассы смотрим время прохождения
		vTime = traceA[i] + pereezd + (lenB - traceB[i]); // время прохождения с переходом на участке i
		if (vTime < time2) {
			time2 = vTime;
		}
	}

	if (time2 < time1) { time1 = time2; }

	cout << endl << "Минимальное время прохождения: " << time1 << endl;

	return 0;
}

