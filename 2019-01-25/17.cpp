/*
17) По каналу связи передается последовательность положительных целых чисел X1,X2 , … все числа не превышают 1000, 
их количество заранее неизвестно. Каждое число передается в виде отдельной текстовой строки, содержащей десятичную запись числа. 
Признаком конца передаваемой последовательности является число 0. Участок последовательности от элемента XT до элемента XT+N называется подъемом, 
если на этом участке каждое следующее число больше предыдущего. Высотой подъема называется разность XT+N-XT. Напишите эффективную программу, 
которая вычисляет наибольшую высоту среди всех подъемов последовательности. Если в последовательности нет ни одного подъема, программа выдает 0. 
Программа должна напечатать отчет по следующей форме:

… numbers have received
Highest lift height is …
*/

#include <iostream>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Rus"); // русифицируем вывод
	
	char sss[256];
	int i,prevVal,curVal,prevLift,minValLift;

	// начальное значение - от него пляшем
	i = 1;
	cout << "Введите целое число (0 - прервать): "; cin >> sss;
	curVal = atoi(sss); // преобразуем введенный текст в число
	prevVal = curVal;
	minValLift = curVal;
	prevLift = 0;
	if (curVal == 0) { // если 0 - прерываем ввод
		cout << endl << "0 чисел получено" << endl;
		return 0;
	}

	// теперь бесконечный цикл ввода, пока не прервем сами
	while (true) {
		cout << "Введите целое число (0 - прервать): "; cin >> sss;
		curVal = atoi(sss); // преобразуем введенный текст в число
		if (curVal == 0) { // если 0 - прерываем ввод
			if ((prevVal - minValLift) > prevLift) { prevLift = prevVal - minValLift; }
			break;
		}
		i++;
		if (curVal > prevVal) {// идет подъем
			prevVal = curVal; 
		}
		else { // лифт прервался - смотрим какой получислся лифт и сравниваем с предыдущим. Инициализируем новый лифт
			if ((prevVal - minValLift) > prevLift) { prevLift = prevVal - minValLift; }
			prevVal = curVal;
			minValLift = curVal;
		}
	}

	cout << endl << i << " чисел получено" << endl;
	cout << "Максимальный подъем: " << prevLift << endl;

	return 0;
}
